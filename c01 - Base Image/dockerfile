# Base stage: Use the official PHP image
FROM php:8.2-fpm AS base
WORKDIR /var/www/html
RUN apt-get update && apt-get upgrade -y
RUN apt-get update && apt-get upgrade -y && apt-get install -y libpq-dev sendmail libcurl4-openssl-dev nginx
RUN docker-php-ext-install pdo pdo_pgsql pgsql

# Builder stage: For dependency installation
FROM base AS builder
WORKDIR /var/www/html

# Install system dependencies
RUN apt-get install -y \
    unzip \
    git \
    libzip-dev \
    libpq-dev \
    libcurl4-openssl-dev \
    nginx \
    && docker-php-ext-install zip pdo pdo_pgsql pgsql curl \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Composer globally
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Install PHP dependencies
RUN composer require smarty/smarty phpunit/phpunit

# Final stage: Runtime
FROM base AS runtime
WORKDIR /var/www/html

# Copy the default NGINX configuration
COPY nginx.conf /etc/nginx/nginx.conf

# Copy dependencies from the builder stage
COPY --chown=www-data:www-data --chmod=775 ./html/ /var/www/html/
COPY --from=builder --chown=www-data:www-data --chmod=775 /var/www/html/vendor/ /var/www/html/vendor/

# Expose the port used by NGINX
EXPOSE 80

# adjust file permissions www-data user
RUN chown -R www-data:www-data /var/lib/nginx /run

# Switch to www-data user (default user for NGINX and PHP-FPM)
USER www-data

# Start PHP-FPM and NGINX services
CMD ["sh", "-c", "php-fpm -D && nginx -g 'daemon off;'"]
