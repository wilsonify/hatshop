# Use the official PHP image with Apache
FROM php:8.2-apache

# Install dependencies (unzip, git, PostgreSQL extensions, etc.) and Composer
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
    unzip \
    git \
    libzip-dev \
    libpq-dev \
    && docker-php-ext-install zip pdo pdo_pgsql pgsql \
    && curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer


# Set the working directory to /var/www/hatshop
WORKDIR /var/www/hatshop

# Install Smarty using Composer
RUN composer require smarty/smarty

# Enable required Apache modules
RUN a2enmod rewrite ssl

# Create Apache configuration for the /hatshop/ virtual folder
COPY ./hatshop.conf /etc/apache2/conf-available/hatshop.conf

# Enable the hatshop configuration
RUN a2enconf hatshop

# Copy self-signed SSL certificate and key (optional, you can provide your own)
RUN mkdir -p /etc/ssl/certs/ && mkdir -p /etc/ssl/private/
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/ssl/private/ssl-cert.key \
    -out /etc/ssl/certs/ssl-cert.crt \
    -subj "/C=US/ST=ExampleState/L=ExampleCity/O=ExampleOrg/OU=IT/CN=localhost"

# Create and configure an Apache VirtualHost for HTTPS
COPY ./hatshop-ssl.conf /etc/apache2/sites-available/hatshop-ssl.conf

# Enable the SSL VirtualHost and default site
RUN a2ensite hatshop-ssl

# Expose both HTTP (80) and HTTPS (443) ports
EXPOSE 80 443

# Copy application code into /var/www/hatshop and set permissions
COPY --chown=www-data:www-data --chmod=775 ./Code/ /var/www/hatshop/
COPY --chown=www-data:www-data --chmod=775 ./Images/images /var/www/hatshop/images
COPY --chown=www-data:www-data --chmod=775 ./Images/product_images /var/www/hatshop/product_images


# Set the entrypoint to run Apache in the foreground
CMD ["apache2-foreground"]
